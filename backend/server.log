
> backend@1.0.0 start
> node index.js

🚀 Iniciando SDN-STAFF Backend...
Executing (default): SELECT 1+1 AS result
✅ Conexión a la base de datos establecida correctamente.
🔧 Verificando y corrigiendo datos NULL...
✅ Datos NULL corregidos.
🔧 Sincronizando con opciones: { force: true, alter: true }
Executing (default): DROP TABLE IF EXISTS `validacion_tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `usuariorol`;
Executing (default): DROP TABLE IF EXISTS `stand_servicio`;
Executing (default): DROP TABLE IF EXISTS `stand_evento`;
Executing (default): DROP TABLE IF EXISTS `servicio_adicional`;
Executing (default): DROP TABLE IF EXISTS `rol`;
Executing (default): DROP TABLE IF EXISTS `pre_registros`;
Executing (default): DROP TABLE IF EXISTS `plantilla_evento`;
Executing (default): DROP TABLE IF EXISTS `log_validacion`;
Executing (default): DROP TABLE IF EXISTS `inscripcion_actividad`;
Executing (default): DROP TABLE IF EXISTS `historico_asignacion`;
Executing (default): DROP TABLE IF EXISTS `solicitud_asignacion`;
Executing (default): DROP TABLE IF EXISTS `empresa_evento`;
Executing (default): DROP TABLE IF EXISTS `empresa_etiqueta`;
Executing (default): DROP TABLE IF EXISTS `etiqueta_libre`;
Executing (default): DROP TABLE IF EXISTS `empresa_categoria`;
Executing (default): DROP TABLE IF EXISTS `conflicto_programacion`;
Executing (default): DROP TABLE IF EXISTS `conflicto_asignacion`;
Executing (default): DROP TABLE IF EXISTS `stand`;
Executing (default): DROP TABLE IF EXISTS `tipo_stand`;
Executing (default): DROP TABLE IF EXISTS `configuracion_tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `categoria_comercial`;
Executing (default): DROP TABLE IF EXISTS `actividad_recurso`;
Executing (default): DROP TABLE IF EXISTS `recurso`;
Executing (default): DROP TABLE IF EXISTS `actividad_ponente`;
Executing (default): DROP TABLE IF EXISTS `ponente`;
Executing (default): DROP TABLE IF EXISTS `actividad`;
Executing (default): DROP TABLE IF EXISTS `sala_virtual`;
Executing (default): DROP TABLE IF EXISTS `track_tematico`;
Executing (default): DROP TABLE IF EXISTS `acceso_evento`;
Executing (default): DROP TABLE IF EXISTS `credencial`;
Executing (default): DROP TABLE IF EXISTS `empresa_expositora`;
Executing (default): DROP TABLE IF EXISTS `plantilla_credencial`;
Executing (default): DROP TABLE IF EXISTS `tipo_credencial`;
Executing (default): DROP TABLE IF EXISTS `evento`;
Executing (default): DROP TABLE IF EXISTS `tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `usuario`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'acceso_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'actividad' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'actividad_ponente' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'actividad_recurso' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'categoria_comercial' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'configuracion_tipo_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'conflicto_asignacion' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'conflicto_programacion' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'credencial' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'empresa_categoria' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'empresa_etiqueta' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'empresa_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'empresa_expositora' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'etiqueta_libre' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'historico_asignacion' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'inscripcion_actividad' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'log_validacion' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'plantilla_credencial' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'plantilla_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'ponente' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'pre_registros' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'recurso' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'rol' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'sala_virtual' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'servicio_adicional' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'solicitud_asignacion' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'stand' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'stand_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'stand_servicio' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'tipo_credencial' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'tipo_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'tipo_stand' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'track_tematico' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'usuario' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'usuariorol' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'validacion_tipo_evento' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='sdnStaff' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): DROP TABLE IF EXISTS `acceso_evento`;
Executing (default): DROP TABLE IF EXISTS `actividad`;
Executing (default): DROP TABLE IF EXISTS `actividad_ponente`;
Executing (default): DROP TABLE IF EXISTS `actividad_recurso`;
Executing (default): DROP TABLE IF EXISTS `categoria_comercial`;
Executing (default): DROP TABLE IF EXISTS `configuracion_tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `conflicto_asignacion`;
Executing (default): DROP TABLE IF EXISTS `conflicto_programacion`;
Executing (default): DROP TABLE IF EXISTS `credencial`;
Executing (default): DROP TABLE IF EXISTS `empresa_categoria`;
Executing (default): DROP TABLE IF EXISTS `empresa_etiqueta`;
Executing (default): DROP TABLE IF EXISTS `empresa_evento`;
Executing (default): DROP TABLE IF EXISTS `empresa_expositora`;
Executing (default): DROP TABLE IF EXISTS `etiqueta_libre`;
Executing (default): DROP TABLE IF EXISTS `evento`;
Executing (default): DROP TABLE IF EXISTS `historico_asignacion`;
Executing (default): DROP TABLE IF EXISTS `inscripcion_actividad`;
Executing (default): DROP TABLE IF EXISTS `log_validacion`;
Executing (default): DROP TABLE IF EXISTS `plantilla_credencial`;
Executing (default): DROP TABLE IF EXISTS `plantilla_evento`;
Executing (default): DROP TABLE IF EXISTS `ponente`;
Executing (default): DROP TABLE IF EXISTS `pre_registros`;
Executing (default): DROP TABLE IF EXISTS `recurso`;
Executing (default): DROP TABLE IF EXISTS `rol`;
Executing (default): DROP TABLE IF EXISTS `sala_virtual`;
Executing (default): DROP TABLE IF EXISTS `servicio_adicional`;
Executing (default): DROP TABLE IF EXISTS `solicitud_asignacion`;
Executing (default): DROP TABLE IF EXISTS `stand`;
Executing (default): DROP TABLE IF EXISTS `stand_evento`;
Executing (default): DROP TABLE IF EXISTS `stand_servicio`;
Executing (default): DROP TABLE IF EXISTS `tipo_credencial`;
Executing (default): DROP TABLE IF EXISTS `tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `tipo_stand`;
Executing (default): DROP TABLE IF EXISTS `track_tematico`;
Executing (default): DROP TABLE IF EXISTS `usuario`;
Executing (default): DROP TABLE IF EXISTS `usuariorol`;
Executing (default): DROP TABLE IF EXISTS `validacion_tipo_evento`;
Executing (default): DROP TABLE IF EXISTS `usuario`;
Executing (default): CREATE TABLE IF NOT EXISTS `usuario` (`id_usuario` INTEGER NOT NULL auto_increment , `correo` VARCHAR(50) NOT NULL, `password_hash` VARCHAR(255) NOT NULL, `nombre` VARCHAR(100), `foto_url` TEXT, `bio` TEXT, `estado` ENUM('activo', 'inactivo', 'suspendido') DEFAULT 'activo', `ultima_sesion` DATETIME, `fecha_creacion` DATETIME NOT NULL, `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_by_usuario` INTEGER, `updated_by_usuario` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `deleted_at` DATETIME, UNIQUE `unique_correo` (`correo`), PRIMARY KEY (`id_usuario`), FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`created_by_usuario`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`updated_by_usuario`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `usuario` FROM `sdnStaff`
Executing (default): ALTER TABLE `usuario` ADD UNIQUE INDEX `usuario_correo` (`correo`)
Executing (default): ALTER TABLE `usuario` ADD INDEX `usuario_estado` (`estado`)
Executing (default): ALTER TABLE `usuario` ADD INDEX `usuario_created_by` (`created_by`)
Executing (default): ALTER TABLE `usuario` ADD INDEX `usuario_fecha_creacion` (`fecha_creacion`)
Executing (default): DROP TABLE IF EXISTS `tipo_evento`;
Executing (default): CREATE TABLE IF NOT EXISTS `tipo_evento` (`id_tipo_evento` INTEGER NOT NULL auto_increment , `nombre_tipo` VARCHAR(50) NOT NULL, `descripcion` TEXT, `configuracion_especifica` JSON COMMENT 'Configuraciones específicas por tipo: plataformas virtuales, requisitos presenciales, etc.', `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, UNIQUE `unique_nombre_tipo` (`nombre_tipo`), PRIMARY KEY (`id_tipo_evento`), FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `tipo_evento` FROM `sdnStaff`
Executing (default): ALTER TABLE `tipo_evento` ADD UNIQUE INDEX `tipo_evento_nombre_tipo` (`nombre_tipo`)
Executing (default): DROP TABLE IF EXISTS `evento`;
Executing (default): CREATE TABLE IF NOT EXISTS `evento` (`id_evento` INTEGER NOT NULL auto_increment , `nombre_evento` VARCHAR(100) NOT NULL, `descripcion` TEXT, `fecha_inicio` DATETIME NOT NULL, `fecha_fin` DATETIME NOT NULL, `ubicacion` VARCHAR(200) COMMENT 'Ubicación física para eventos presenciales o híbridos', `url_virtual` VARCHAR(500) COMMENT 'URL de la plataforma virtual para eventos virtuales o híbridos', `id_tipo_evento` INTEGER NOT NULL, `estado` ENUM('borrador', 'publicado', 'activo', 'finalizado', 'archivado') DEFAULT 'borrador', `imagen_logo` VARCHAR(500) COMMENT 'URL o path de la imagen/logo del evento', `configuracion_especifica` JSON COMMENT 'Configuraciones específicas del evento: horarios, requisitos, etc.', `url_amigable` VARCHAR(100) COMMENT 'URL personalizada para el evento', `capacidad_maxima` INTEGER, `precio_entrada` DECIMAL(10,2) DEFAULT 0, `moneda` VARCHAR(3) NOT NULL DEFAULT 'PEN', `requiere_aprobacion` TINYINT(1) DEFAULT false COMMENT 'Si los expositores requieren aprobación para participar', `fecha_limite_registro` DATETIME COMMENT 'Fecha límite para registro de expositores', `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, UNIQUE `unique_url_amigable` (`url_amigable`), PRIMARY KEY (`id_evento`), FOREIGN KEY (`id_tipo_evento`) REFERENCES `tipo_evento` (`id_tipo_evento`) ON DELETE RESTRICT ON UPDATE CASCADE, FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `evento` FROM `sdnStaff`
Executing (default): ALTER TABLE `evento` ADD INDEX `evento_nombre_evento` (`nombre_evento`)
Executing (default): ALTER TABLE `evento` ADD INDEX `evento_fecha_inicio` (`fecha_inicio`)
Executing (default): ALTER TABLE `evento` ADD INDEX `evento_fecha_fin` (`fecha_fin`)
Executing (default): ALTER TABLE `evento` ADD INDEX `evento_estado` (`estado`)
Executing (default): ALTER TABLE `evento` ADD UNIQUE INDEX `evento_url_amigable` (`url_amigable`)
Executing (default): DROP TABLE IF EXISTS `tipo_credencial`;
Executing (default): CREATE TABLE IF NOT EXISTS `tipo_credencial` (`id_tipo_credencial` INTEGER auto_increment , `nombre_tipo` VARCHAR(100) NOT NULL COMMENT 'Nombre del tipo de credencial (visitante, expositor, personal, prensa, VIP)', `descripcion` TEXT COMMENT 'Descripción detallada del tipo de credencial', `color_identificacion` VARCHAR(7) DEFAULT '#007bff' COMMENT 'Color en formato hexadecimal para identificación visual', `nivel_acceso` ENUM('basico', 'intermedio', 'avanzado', 'total') NOT NULL DEFAULT 'basico' COMMENT 'Nivel de acceso que otorga este tipo de credencial', `es_imprimible` TINYINT(1) NOT NULL DEFAULT true COMMENT 'Indica si este tipo de credencial puede ser impreso', `requiere_aprobacion` TINYINT(1) NOT NULL DEFAULT false COMMENT 'Indica si requiere aprobación manual antes de generar', `duracion_validez_horas` INTEGER COMMENT 'Duración de validez en horas (null = sin límite)', `permite_reingreso` TINYINT(1) NOT NULL DEFAULT true COMMENT 'Permite múltiples entradas al evento', `configuracion_accesos` JSON COMMENT 'Configuración específica de accesos en formato JSON', `activo` TINYINT(1) NOT NULL DEFAULT true, `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, PRIMARY KEY (`id_tipo_credencial`), FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `tipo_credencial` FROM `sdnStaff`
Executing (default): ALTER TABLE `tipo_credencial` ADD UNIQUE INDEX `tipo_credencial_nombre_tipo` (`nombre_tipo`)
Executing (default): ALTER TABLE `tipo_credencial` ADD INDEX `tipo_credencial_nivel_acceso` (`nivel_acceso`)
Executing (default): ALTER TABLE `tipo_credencial` ADD INDEX `tipo_credencial_activo` (`activo`)
Executing (default): DROP TABLE IF EXISTS `plantilla_credencial`;
Executing (default): CREATE TABLE IF NOT EXISTS `plantilla_credencial` (`id_plantilla` INTEGER auto_increment , `nombre_plantilla` VARCHAR(150) NOT NULL COMMENT 'Nombre descriptivo de la plantilla', `id_tipo_credencial` INTEGER NOT NULL COMMENT 'Tipo de credencial asociado a esta plantilla', `id_tipo_evento` INTEGER COMMENT 'Tipo de evento específico (null = aplica a todos)', `diseño_html` LONGTEXT NOT NULL COMMENT 'Template HTML con variables para personalización', `estilos_css` LONGTEXT COMMENT 'Estilos CSS para la plantilla', `configuracion_layout` JSON COMMENT 'Configuración del layout: dimensiones, posiciones, etc.', `variables_disponibles` JSON COMMENT 'Lista de variables disponibles para usar en la plantilla', `imagen_fondo` VARCHAR(500) COMMENT 'URL o path de la imagen de fondo', `logo_evento` VARCHAR(500) COMMENT 'URL o path del logo del evento', `dimensiones` JSON COMMENT 'Dimensiones de la credencial', `configuracion_qr` JSON COMMENT 'Configuración del código QR', `es_plantilla_default` TINYINT(1) NOT NULL DEFAULT false COMMENT 'Indica si es la plantilla por defecto para el tipo', `activa` TINYINT(1) NOT NULL DEFAULT true, `version` VARCHAR(20) NOT NULL DEFAULT '1.0' COMMENT 'Versión de la plantilla para control de cambios', `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, PRIMARY KEY (`id_plantilla`), FOREIGN KEY (`id_tipo_credencial`) REFERENCES `tipo_credencial` (`id_tipo_credencial`), FOREIGN KEY (`id_tipo_evento`) REFERENCES `tipo_evento` (`id_tipo_evento`), FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `plantilla_credencial` FROM `sdnStaff`
Executing (default): ALTER TABLE `plantilla_credencial` ADD INDEX `plantilla_credencial_id_tipo_credencial` (`id_tipo_credencial`)
Executing (default): ALTER TABLE `plantilla_credencial` ADD INDEX `plantilla_credencial_id_tipo_evento` (`id_tipo_evento`)
Executing (default): ALTER TABLE `plantilla_credencial` ADD INDEX `plantilla_credencial_es_plantilla_default` (`es_plantilla_default`)
Executing (default): ALTER TABLE `plantilla_credencial` ADD INDEX `plantilla_credencial_activa` (`activa`)
Executing (default): ALTER TABLE `plantilla_credencial` ADD UNIQUE INDEX `plantilla_credencial_nombre_plantilla_deleted_at` (`nombre_plantilla`, `deleted_at`)
Executing (default): DROP TABLE IF EXISTS `empresa_expositora`;
Executing (default): CREATE TABLE IF NOT EXISTS `empresa_expositora` (`id_empresa` INTEGER NOT NULL auto_increment , `nombre_empresa` VARCHAR(150) NOT NULL, `razon_social` VARCHAR(200), `ruc` VARCHAR(11), `descripcion` TEXT, `sector` VARCHAR(100) COMMENT 'Sector o industria de la empresa (tecnología, salud, educación, etc.)', `tamaño_empresa` ENUM('micro', 'pequeña', 'mediana', 'grande'), `logo_url` VARCHAR(500) COMMENT 'URL o path del logo de la empresa', `sitio_web` VARCHAR(255), `email_contacto` VARCHAR(100) NOT NULL, `telefono_contacto` VARCHAR(20), `nombre_contacto` VARCHAR(100) COMMENT 'Nombre de la persona de contacto principal', `cargo_contacto` VARCHAR(100), `direccion` VARCHAR(300), `ciudad` VARCHAR(100), `pais` VARCHAR(100) DEFAULT 'Perú', `estado` ENUM('pendiente', 'aprobada', 'rechazada', 'suspendida', 'inactiva') DEFAULT 'pendiente', `fecha_aprobacion` DATETIME COMMENT 'Fecha en que la empresa fue aprobada', `aprobada_por` INTEGER COMMENT 'Usuario que aprobó la empresa', `motivo_rechazo` TEXT COMMENT 'Motivo en caso de rechazo', `documentos_legales` JSON COMMENT 'URLs y metadatos de documentos legales subidos', `fecha_vencimiento_documentos` DATETIME COMMENT 'Fecha de vencimiento de documentos legales', `redes_sociales` JSON COMMENT 'URLs de redes sociales (Facebook, Instagram, LinkedIn, etc.)', `productos_servicios` TEXT COMMENT 'Descripción de productos y servicios que ofrece', `experiencia_ferias` TEXT COMMENT 'Experiencia previa en ferias y eventos', `configuracion_especifica` JSON COMMENT 'Configuraciones específicas por empresa', `numero_participaciones` INTEGER NOT NULL DEFAULT 0, `calificacion_promedio` DECIMAL(3,2) COMMENT 'Calificación promedio basada en participaciones anteriores', `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, UNIQUE `unique_ruc` (`ruc`), PRIMARY KEY (`id_empresa`), FOREIGN KEY (`aprobada_por`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `empresa_expositora` FROM `sdnStaff`
Executing (default): ALTER TABLE `empresa_expositora` ADD INDEX `empresa_expositora_nombre_empresa` (`nombre_empresa`)
Executing (default): ALTER TABLE `empresa_expositora` ADD UNIQUE INDEX `empresa_expositora_ruc` (`ruc`)
Executing (default): ALTER TABLE `empresa_expositora` ADD INDEX `empresa_expositora_email_contacto` (`email_contacto`)
Executing (default): ALTER TABLE `empresa_expositora` ADD INDEX `empresa_expositora_estado` (`estado`)
Executing (default): ALTER TABLE `empresa_expositora` ADD INDEX `empresa_expositora_sector` (`sector`)
Executing (default): ALTER TABLE `empresa_expositora` ADD INDEX `empresa_expositora_fecha_aprobacion` (`fecha_aprobacion`)
Executing (default): DROP TABLE IF EXISTS `credencial`;
Executing (default): CREATE TABLE IF NOT EXISTS `credencial` (`id_credencial` INTEGER auto_increment , `codigo_unico` VARCHAR(50) NOT NULL UNIQUE COMMENT 'Código único alfanumérico para identificar la credencial', `id_evento` INTEGER NOT NULL COMMENT 'Evento al que pertenece la credencial', `id_tipo_credencial` INTEGER NOT NULL COMMENT 'Tipo de credencial', `id_plantilla` INTEGER COMMENT 'Plantilla utilizada para generar la credencial', `nombre_completo` VARCHAR(200) NOT NULL COMMENT 'Nombre completo del portador de la credencial', `email` VARCHAR(150) COMMENT 'Email del portador', `telefono` VARCHAR(20) COMMENT 'Teléfono de contacto', `documento_identidad` VARCHAR(20) COMMENT 'Documento de identidad (DNI, pasaporte, etc.)', `empresa_organizacion` VARCHAR(200) COMMENT 'Empresa u organización a la que pertenece', `cargo_titulo` VARCHAR(150) COMMENT 'Cargo o título profesional', `id_empresa_expositora` INTEGER COMMENT 'Si es expositor, referencia a la empresa expositora', `id_usuario` INTEGER COMMENT 'Si es usuario del sistema, referencia al usuario', `fecha_emision` DATETIME NOT NULL COMMENT 'Fecha y hora de emisión de la credencial', `fecha_activacion` DATETIME COMMENT 'Fecha desde la cual la credencial es válida', `fecha_expiracion` DATETIME COMMENT 'Fecha hasta la cual la credencial es válida', `estado` ENUM('pendiente', 'activa', 'suspendida', 'revocada', 'expirada') NOT NULL DEFAULT 'pendiente' COMMENT 'Estado actual de la credencial', `qr_data` TEXT NOT NULL COMMENT 'Datos codificados en el QR (JSON encriptado)', `qr_hash` VARCHAR(64) NOT NULL UNIQUE COMMENT 'Hash SHA-256 único del QR para validación', `total_validaciones` INTEGER NOT NULL DEFAULT 0 COMMENT 'Número total de veces que se ha validado', `ultima_validacion` DATETIME COMMENT 'Fecha y hora de la última validación', `limite_validaciones` INTEGER COMMENT 'Límite máximo de validaciones (null = sin límite)', `archivo_pdf_path` VARCHAR(500) COMMENT 'Ruta del archivo PDF generado', `imagen_credencial_path` VARCHAR(500) COMMENT 'Ruta de la imagen de la credencial', `datos_adicionales` JSON COMMENT 'Datos adicionales específicos del evento o tipo', `configuracion_accesos` JSON COMMENT 'Configuración específica de accesos para esta credencial', `notas_internas` TEXT COMMENT 'Notas internas para el personal', `total_reimpresiones` INTEGER NOT NULL DEFAULT 0 COMMENT 'Número de veces que se ha reimpreso', `ultima_reimpresion` DATETIME COMMENT 'Fecha de la última reimpresión', `created_by` INTEGER, `updated_by` INTEGER, `deleted_by` INTEGER, `created_at` DATETIME NOT NULL, `updated_at` DATETIME, `deleted_at` DATETIME, PRIMARY KEY (`id_credencial`), FOREIGN KEY (`id_evento`) REFERENCES `evento` (`id_evento`), FOREIGN KEY (`id_tipo_credencial`) REFERENCES `tipo_credencial` (`id_tipo_credencial`), FOREIGN KEY (`id_plantilla`) REFERENCES `plantilla_credencial` (`id_plantilla`), FOREIGN KEY (`id_empresa_expositora`) REFERENCES `empresa_expositora` (`id_empresa_expositora`), FOREIGN KEY (`id_usuario`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`created_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`updated_by`) REFERENCES `usuario` (`id_usuario`), FOREIGN KEY (`deleted_by`) REFERENCES `usuario` (`id_usuario`)) ENGINE=InnoDB;
⚠️ Error en sincronización automática: Failed to add the foreign key constraint. Missing column 'id_empresa_expositora' for constraint 'credencial_ibfk_4' in the referenced table 'empresa_expositora'
💡 Continuando sin sincronización. Considera usar migraciones.
Executing (default): SELECT 1+1 AS result
🚀 Servidor ejecutándose en puerto 3000
🔗 Health check: http://localhost:3000/health
📊 API Base URL: http://localhost:3000/api
📚 Documentación Swagger: http://localhost:3000/api-docs
📋 JSON Schema: http://localhost:3000/api-docs.json
🔧 Sync config - Force: true, Alter: true
GET /api/ - 2025-07-20T06:23:28.095Z
